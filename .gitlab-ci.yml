#variables:
#    GIT_STRATEGY: clone
#
#include:
#    project: 'shopware/6/product/platform'
#    # change to trunk after merge
#    ref: 'next-16981/add-ci-template-for-plugins'
#    file: '.gitlab/templates/theme.yml'

#validate zip:
#    allow_failure: true

stages:
    - lint
    - e2e
    - visual

variables:
    PLATFORM_BRANCH: 'trunk'
    PROJECT_ROOT: ${CI_PROJECT_DIR}
    WEB_DOCUMENT_ROOT: $CI_PROJECT_DIR/public
    MYSQL_ROOT_PASSWORD: root
    DEV_IMAGE: shopware/development:7.4-composer-2
    GIT_STRATEGY: clone
    COMPOSER_PROCESS_TIMEOUT: 7200 # 60s * 60 * 2 = 2 hours
    LOG_STDOUT: $CI_PROJECT_DIR/stdout.log
    CYPRESS_baseUrl: 'http://localhost:8000'
    CYPRESS_localUsage: 1
    CYPRESS_shopwareRoot: $CI_PROJECT_DIR
    SHOPWARE_HTTP_CACHE_ENABLED: 0
    E2E_PROJECT_PATH: $CI_PROJECT_DIR/custom/apps/$THEME_NAME/Resources/app/storefront/test/e2e/
    CYPRESS_screenshotsFolder: $CI_PROJECT_DIR/var/log/screenshots

default:
    image: $DEV_IMAGE
    services:
        -   name: mariadb:10.4
            alias: database
    before_script:
        - export PLUGIN_NAME="${PLUGIN_NAME:-${CI_PROJECT_TITLE}}"
        - echo "$PLUGIN_NAME"
        - zip -rq plugin.zip .
        - mv plugin.zip /tmp/plugin.zip
        - rm -Rf .* * || true
        - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.shopware.com/shopware/6/product/platform.git . --branch $PLATFORM_BRANCH
        - mkdir -p custom/apps custom/plugins config/jwt  || true
        - unzip -q /tmp/plugin.zip -d custom/apps/$PLUGIN_NAME
        - composer install
        - bin/console system:generate-jwt || true
        - bin/console system:install --drop-database --basic-setup --force
        - chown -R application:application .
        - bin/console app:install --activate $THEME_NAME
        - bin/console bundle:dump
        - '[[ ! -r src/Resources/app/administration/package.json ]] || npm clean-install --prefix src/Resources/app/administration'
        - '[[ ! -r src/Resources/app/storefront/package.json ]] || npm clean-install --prefix src/Resources/app/storefront'
        - '(cd vendor/shopware/administration/Resources/app/administration/ && npm ci)'
        - npm run build --prefix vendor/shopware/administration/Resources/app/administration/
        - '(cd vendor/shopware/storefront/Resources/app/storefront/ && npm ci)'
        - npm run production --prefix vendor/shopware/storefront/Resources/app/storefront/
        - '(cd shopware/storefront/Resources/app/storefront && node copy-to-vendor.js)'
        - bin/console theme:change $THEME_NAME --all
        - /entrypoint supervisord > /dev/null 2>&1 &
        - cd custom/apps/$PLUGIN_NAME

validate snippets:
    stage: lint
    needs: []
    rules:
        - changes:
              - '**/*.json'
    script:
        - ${PROJECT_ROOT}/bin/console snippets:validate

Template filled:
    stage: lint
    image: bash
    needs: []
    rules:
        - exists:
              - TEMPLATE
          if: $CI_PROJECT_TITLE != "SwagPluginTemplate"
    before_script: []
    script:
        - echo "run './bin/init $CI_PROJECT_TITLE'"
        - exit 1


Check built JS files:
    stage: lint
    allow_failure: true
    script:
        - cd $CI_PROJECT_DIR/platform/custom/apps/$THEME_NAME
        - >
            if ! git diff --quiet --ignore-submodules HEAD --; then
                echo "Built Javascript files differ. Update the dependencies and execute 'administration:build' and 'storefront:build' again";
                git status;
                exit 1;
            else
                echo "Everything ok"
                exit 0;
            fi

Validate snippets:
    stage: lint
    script:
        - php bin/console snippets:validate

.E2E:
    stage: e2e
    timeout: 2h 00m
    script:
        - composer run e2e:prepare
        - cd custom/apps/$THEME_NAME/Resources/app/storefront/test/e2e/
        - npm clean-install
        - ./node_modules/.bin/cypress run
          --browser $BROWSER
          --headless
          --env grepTags=@workflow
    after_script:
        - mkdir $CI_PROJECT_DIR/platform/var/log/e2e
        - cd $E2E_PROJECT_PATH
        - npx mochawesome-merge cypress/results/mocha/*.json > cypress/mochareports/report.json
        - npx marge cypress/mochareports/*.json -f report -o mochareports"
        - mv cypress/results/single-reports/*.xml $CI_PROJECT_DIR/platform/var/log/e2e/ || true
        - mv mochareports/ $CI_PROJECT_DIR/platform/var/log/e2e/ || true
    artifacts:
        when: always
        paths:
            - platform/build/artifacts/e2e/
            - platform/var/log/*
            - $CI_PROJECT_DIR/stdout.log
        reports:
            junit: platform/build/artifacts/e2e/*.xml

E2E:
    extends: .E2E
    dependencies: []
    variables:
        APP_ENV: e2e
        BROWSER: 'chrome'

Percy:
    extends: .E2E
    stage: visual
    dependencies: []
    variables:
        APP_ENV: e2e
        PERCY_TARGET_BRANCH: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
        PERCY_TARGET_COMMIT: $CI_MERGE_REQUEST_DIFF_BASE_SHA
        PERCY_BRANCH: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
        PERCY_COMMIT: $CI_COMMIT_SHA
        PERCY_TOKEN: $PERCY_TOKEN
        CYPRESS_usePercy: 'true'
        CYPRESS_numTestsKeptInMemory: 0
    script:
        - composer run e2e:prepare
        - cd custom/apps/$THEME_NAME/Resources/app/storefront/test/e2e/
        - npm clean-install
        - ./node_modules/.bin/percy exec -- ./node_modules/.bin/cypress run
            --browser chrome
            --spec "cypress/**/*.visual.spec.js"
            --headless
